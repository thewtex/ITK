#!/usr/bin/env bash
#==========================================================================
#
#   Copyright Insight Software Consortium
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#          http://www.apache.org/licenses/LICENSE-2.0.txt
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#==========================================================================

DEFAULT_MESSAGE="I will merge this now."

usage() {
  cat << EOF
git gerrit-merge [-m "<gerrit message>"]

This merges into the repository master by doing a

  git stage-push && git stage-merge

It also puts a message into the Gerrit change set that identifies the merging individual.
The message can be changed with the -m flag.
EOF
  exit 1
}

if test "$1" == "-h" -o "$1" == "--help"; then
  usage
fi

die() {
  echo 'gerrit-merge failure' 1>&2
  echo '--------------------' 1>&2
  echo '' 1>&2
  echo "$@" 1>&2
  exit 1
}

# Do not merge until it has been sent up to Gerrit for review.
gerrit_remote=$(git config remote.gerrit.url)
gerrit_push_url=$(git config remote.gerrit.pushurl)
if test $? -eq 0; then
  gerrit_url=$(echo $gerrit_push_url | cut -d ':' -f 1)
  gerrit_project=$(echo $gerrit_push_url | cut -d ':' -f 2)
elif test -n "$gerrit_remote"; then
  gerrit_url=$(echo $gerrit_remote | cut -d ':' -f 1)
  gerrit_project=$(echo $gerrit_remote | cut -d ':' -f 2)
else
  die "Git remote not set."
fi

ssh $gerrit_url gerrit ls-projects >/dev/null || die "Could not connect to Gerrit."

message="$DEFAULT_MESSAGE"
if test "$1" == "-m"; then
  message="$2"
fi

head_sha=$(git rev-parse HEAD)
review=$(ssh $gerrit_url gerrit review --message \""$message"\" --project=${gerrit_project} $head_sha 2>&1)
if test -n "$review"; then
  die "Unexpected review output:

$review

Have you pushed your patch to Gerrit for review (git gerrit-push)?"
fi

git stage-push && git stage-merge
